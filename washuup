#!/usr/bin/env bash
set -euf
TMP=$(mktemp /tmp/.mm.XXXXXX)
clean() { rm -f ${TMP}; }
trap clean EXIT

TARGET_OS=${TARGET_OS:-linux}
TARGET_ARCH=${TARGET_ARCH:-amd64}
inplace=

declare -A cache

while getopts "hiao:" opt; do
	case $opt in
	i) inplace=true ;;
	o) TARGET_OS=${OPTARG} ;;
	a) TARGET_ARCH=${OPTARG} ;;
	h)
		echo "usage: prog"
		exit 0
		;;
	*)
		echo "unknown option: -$OPTARG" >&2
		exit 1
		;;
	esac
done

shift $((OPTIND - 1))
ARGS=("${@}")
[[ -z ${ARGS[*]} ]] && {
	echo "need a yaml file in argument"
	exit 1
}

for file in "${ARGS[@]}"; do
	(grep -n "image:.*@sha256" ${file} || true) >${TMP}

	[[ -s ${TMP} ]] || {
		continue
	}

	while read -a line; do
		lino=${line[0]/:/}
		image=${line[-1]/:/}
		base=${image%%@*}
		olddigest=${image##*@}
		olddigest=${olddigest#sha256}
		if [[ -n ${cache[$base]-""} ]]; then
			newdigest=${cache[$base]}
		else
			newdigest=$(skopeo inspect --override-arch=${TARGET_ARCH} --override-os=${TARGET_OS} --format='{{ .Digest }}' docker://${base})
			newdigest=${newdigest#sha256:}
			cache[${base}]=${newdigest}
		fi
		if [[ ${newdigest} != "${olddigest}" ]]; then
			echo "${file}:${lino}: new digest for ${base} -> ${newdigest}"
			if [[ ${inplace} == "true" ]]; then
				sed -i "${lino}s/${olddigest}/${newdigest}/" ${file}
			fi
		fi
	done <${TMP}
done
